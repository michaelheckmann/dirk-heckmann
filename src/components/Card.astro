---
export interface Props {
  imageSource: string;
  caption: string;
  captionMobile: string;
}

const { imageSource, caption, captionMobile } = Astro.props;
---

<a
  class="cursor-pointer flex justify-center items-center flex-col group"
  href="/dirk-heckmann-de.vcf"
>
  <div
    class="relative w-full h-96 scale-100 group-hover:scale-[1.01] transition-transform duration-500 ease-in-out"
  >
    <img
      src={imageSource}
      class="absolute top-0 left-0 w-full h-full rounded-3xl z-20 p-[1.5px] object-cover"
      alt=""
    />
    <div
      class="top-0 left-0 w-full h-full bg-gradient-to-tr from-slate-100 via-transparent to-white rounded-3xl z-10 absolute shadow-lg"
    >
    </div>
    <div
      class="-z-10 absolute top-0 left-0 w-full h-full rounded-tl-3xl skew-x-2 rounded-tr-3xl rounded-br-2xl rounded-bl-2xl scale-110 opacity-10 group-hover:opacity-30 transition-opacity duration-500 blur-2xl bg-gradient-to-tr from-blue-300 via-yellow-400 to-orange-400"
    >
    </div>
  </div>
  <p
    class="text-center mt-4 tracking-[0.25px] text-black/70 group-hover:text-black transition-colors duration-200 ease-in-out"
    id="download"
  >
    <Fragment set:html={caption.split("\n").join("<br/>")} />
  </p>
  <p
    class="text-center mt-4 tracking-[0.25px] text-black/70 group-hover:text-black transition-colors duration-200 ease-in-out"
    id="downloadMobile"
  >
    <Fragment set:html={captionMobile.split("\n").join("<br/>")} />
  </p>
</a>

<script>
  // @ts-ignore
  const isTouchDevice =
    "ontouchstart" in window ||
    navigator.maxTouchPoints > 0 ||
    // @ts-ignore
    navigator.msMaxTouchPoints > 0;

  if (isTouchDevice) {
    const downloadText = document.getElementById("download");
    if (downloadText) downloadText.style.display = "none";
  } else {
    const downloadText = document.getElementById("downloadMobile");
    if (downloadText) downloadText.style.display = "none";
  }
</script>
